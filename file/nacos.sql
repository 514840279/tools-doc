/*
 Navicat Premium Data Transfer

 Source Server         : 192.168.0.103
 Source Server Type    : MySQL
 Source Server Version : 80022
 Source Host           : 192.168.0.103:3306
 Source Schema         : nacos

 Target Server Type    : MySQL
 Target Server Version : 80022
 File Encoding         : 65001

 Date: 27/09/2022 11:04:53
*/

SET NAMES utf8mb4;
SET FOREIGN_KEY_CHECKS = 0;

-- ----------------------------
-- Table structure for config_info
-- ----------------------------
DROP TABLE IF EXISTS `config_info`;
CREATE TABLE `config_info`  (
  `id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  `c_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_use` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `effect` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `c_schema` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfo_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 634 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info
-- ----------------------------
INSERT INTO `config_info` VALUES (20, 'application-datasource', 'DEFAULT_GROUP', 'spring:\r\n  datasource:\r\n    # 当前数据源操作类型\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    # mysql驱动类\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://192.168.0.103:3306/zc_data?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\r\n    username: root\r\n    password: Root@123\r\n    druid:\r\n      max-active: 30\r\n      initial-size: 10\r\n      validation-query: \"SELECT 1\"\r\n      test-on-borrow: true\r\n      \r\nmybatis:\r\n  mapper-locations: classpath*:mapper/*.xml\r\n#  mapper-locations: classpath*:mapper/*.xml\r\n#  type-aliases-package: com.zc.entity;com.zc.zcEntities\r\n  configuration:\r\n    # Mybatis实体类属性与数据库表列名对应规则：驼峰转换\r\n    mapUnderscoreToCamelCase: true\r\n    callSettersOnNulls: true\r\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\r\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\r\nmybatis-plus:\r\n  mapper-locations: classpath*:mapper/*.xml ', '2d3fb160fb4b6dc1d82e2341ec7e4296', '2021-03-19 00:41:26', '2021-03-19 00:41:26', NULL, '192.168.0.200', '', '486c19f0-ebdf-4a52-85a8-f5691403b59a', '数据库链接，datasource，mybatis', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (21, 'application-logs', 'DEFAULT_GROUP', 'logging:\r\n  level:\r\n    root: INFO\r\n    org:\r\n      springframework:\r\n        web: DEBUG\r\n        security: DEBUG\r\n  file:\r\n    path: /log/', 'dab4b232b0fab72909d3e6c38d2e1073', '2021-03-19 00:47:50', '2021-03-19 00:47:50', NULL, '192.168.0.200', '', '486c19f0-ebdf-4a52-85a8-f5691403b59a', '日志信息，logging', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (22, 'application-nacos', 'DEFAULT_GROUP', 'spring:\r\n  cloud:  \r\n    nacos:  \r\n      server-addr: 192.168.0.103:8848  # nacos的信息\r\n      discovery:  # 容器化后nacos不能找到，需要配置宿主机的ip 和服务的端口，\r\n        ip: 192.168.0.103 # 宿主机的ip\r\n        port: ${server.port}  \r\n\r\nribbon:  \r\n  ReadTimeout: 900000\r\n  ConnectTimeout: 900000\r\n  MaxAutoRetries: 0 #对当前实例的重试次数\r\n  MaxAutoRetriesNextServer: 1 #切换实例的重试次数 1\r\nfeign:\r\n  hystrix:\r\n    enabled: false\r\n  client:\r\n    config:\r\n      default:\r\n        connectTimeout: 300000\r\n        readTimeout: 300000\r\n    \r\nhystrix:\r\n  command:\r\n    default:\r\n      execution:\r\n        isolation:\r\n          thread:\r\n            timeoutInMilliseconds: 1000000  #熔断超时时间\r\n\r\n', 'be8529b4046fb1898af8de43c37714bb', '2021-03-19 00:48:54', '2021-03-19 00:48:54', NULL, '192.168.0.200', '', '486c19f0-ebdf-4a52-85a8-f5691403b59a', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (23, 'application-redis', 'DEFAULT_GROUP', 'spring:\r\n  #redis集群配置\r\n  redis:\r\n    jedis:\r\n      pool:\r\n        max-active: 8\r\n        max-wait: -1\r\n        max-idle: 8\r\n        min-idle: 0\r\n    timeout: 10001\r\n    cluster:\r\n      max-redirects: 3\r\n#      nodes: 192.168.0.104:6379,192.168.0.104:6380,192.168.0.104:6381\r\n      nodes:\r\n        - 192.168.0.11:6379\r\n        - 192.168.0.12:6380\r\n        - 192.168.0.13:6381\r\n    lettuce:\r\n      cluster:\r\n        refresh:\r\n          adaptive: true\r\n      pool:\r\n        max-active: 16\r\n        max-idle: 16\r\n        min-idle: 16\r\n    password: \'\'\r\n    database: 0', 'ccbef16d47586840dfee5fd7f59e1ef5', '2021-03-19 00:50:15', '2021-03-19 00:50:15', NULL, '192.168.0.200', '', '486c19f0-ebdf-4a52-85a8-f5691403b59a', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (24, 'application-datasources', 'DEFAULT_GROUP', 'spring:\r\n#  写入数据源\r\n  datasource:\r\n    # 当前数据源操作类型\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    # mysql驱动类\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n#    url: jdbc:mysql://localhost:3306/db2019?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\r\n    url: jdbc:mysql://192.168.0.103:3306/zc_security?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\r\n    username: root\r\n    password: Root@123\r\n#  读数据源\r\n  db:\r\n    type: com.alibaba.druid.pool.DruidDataSource\r\n    driver-class-name: com.mysql.cj.jdbc.Driver\r\n    url: jdbc:mysql://192.168.0.103:3306/zc_security?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\r\n    username: root\r\n    password: Root@123\r\n    druid:\r\n      max-active: 30\r\n      initial-size: 10\r\n      validation-query: \"SELECT 1\"\r\n      test-on-borrow: true\r\n      ', 'c967560245ac9f9cb7fc171f8758585f', '2021-03-19 01:15:28', '2021-03-19 01:15:28', NULL, '192.168.0.200', 'zc-security-server', '486c19f0-ebdf-4a52-85a8-f5691403b59a', '多数据源，datasources', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (25, 'application-order', 'DEFAULT_GROUP', 'user:\r\n  file-download-path: download\r\n  template-file: download/template/template.xlsx\r\n  filter-row-span: 4\r\n  page-size: 100\r\n  result-size:  10\r\n#  page-size: 10000000\r\n#  result-size:  10000000\r\n#  page-size: 10000\r\n#  result-size:  1000', '181abb0159e7c329a0be5b528fafa1fa', '2021-03-19 01:23:19', '2021-03-19 01:23:19', NULL, '192.168.0.200', 'zc-order-server', '486c19f0-ebdf-4a52-85a8-f5691403b59a', '用户配置，文件路径信息', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (26, 'application-payment', 'DEFAULT_GROUP', 'user:\r\n  alipay:\r\n    #支付宝网关名、partnerId和appId\r\n    #open-api-domain: \"https://openapi.alipaydev.com/gateway.do\"\r\n    #mcloud-api-domain: \"http://mcloudmonitor.com/gateway.do\"\r\n    protocol: \"https\"\r\n    gatewayHost: \"openapi.alipaydev.com\"\r\n    signType: RSA2\r\n    #此处请填写你的PID\r\n    #pid: \"2016092200569807\"\r\n    #此处请填写你当面付的APPID \r\n    app-id: \"2016092200569807\"\r\n    merchant-private-key: \"MIIEvQIBADANBgkqhkiG9w0BAQEFAASCBKcwggSjAgEAAoIBAQCEC6Y95bQ7x1xKplBpkOQKLaI8WGedkC7+sH15cwLm7YYRnbpPdsFtmBcLDJpkkxbsRG1Z7HfIJKqdMqrdFuRRejRRIBL4WOpLixA6UzoyOAYIu9c+w8EXjOI8KV3PoxjKSneW2owe+zBwDU2ZAhQM6DXHOFf8SH2ulpmAGv/DoxSaawF+uXCfaLNHv1seGLBaj+6sAa+CDZYF5pPJsL7uHh5nF8D9H9cknAGWF8292+XIMVLbB3XPI5hnfptKxd2cEZDVne5VlggU/iqn+b6YP81ZC19BIHVvTHKSqc8IR8c05WaBrRC+hZb8Cb31EGa5+Zkn2FGWObLBd/LGmVwpAgMBAAECggEAVvKcytFAdsR1fyo4dOrVXeZil73WrKfOaiKo3Jng5VKuH1du4Phfsdyd/8aSu3sncvgz0SymSwHp3o0IeYCjYwtG+8xU8XcLACdXzjATeBHv1zxpJYkc0ncQWXEbtqe8oSeby5epAJWCdaYs3H3D2iPllYMCXLsXFylPdk1Q8O61ZOudHmBT5bRgV0cCjgg/G0zW8H53ev5nrGjN3kGkrLD7YMV/zAKORRz+IlAQ84T8OwDsTDw6VvhgvjCNntB4OsyGFFVdVwOZkniUZc2/YxZE0qTsoL/eymfRxaSho5SdBFTlqBrJhFZWJmOp/ualck+MXBPyJVILZxzmdsVzyQKBgQC8SWeSFewIf11mbBhLuoZANH0yyoqi/0IZ2EngdA9bpRfit06zKtWWqZwYe64BL6cb/00tofA4ILTZw+ohEmAgDIh44iZvvJHQuiWRfRdMxGeM76Lym1fG0QptFmbaEzTy9WeaV9GwWHJAT5qJDTvMHM36VEN9COhMdoJjp5TC4wKBgQCziGcYvUfh172HO7wrA+FUhN7ojfFM+U9UxXmFS0OFudJxuxlQWTkF4jymOilU8LGUkpSiPnxq+Q5S3tjmqlrzD96DPIsezTbx/qJodiboUzZHN2+qgs3w2Bf4/srPOhyK5WqvE+SlHHUQPd7QR4+rU0jKjKFDT7Rea3dSzdd2gwKBgHjwMT1NJWmj3Ws/PS/PJBIzZMNuAzSE/oE5QuKPyZmU5k2ybjN47O40DVZQgsiyQgUirAEGhhSXNXK2ezk441NSmYoDwKp+la5bEmxry758XQLSnXh1PSEv/iFphTDHq3fvFte1VrONa/1Q5DLptCH70nXbD+pNAWCzsjauWkf/AoGBAKlCkUhes5V1y6bip326c8c2Wd3QbM3QQn2+i9oiYi+CSKiW57+7zqoAaIOjU/JT1mgnZeAsnypPUrTIip+1vndn37XE77iDayjtk3p+4iGoygSMfEe6eKR3ZuqGdPi4Zc6BinozfB46XReJ7TZaMVYp9/eWbDdEvt1B3kZ/8II3AoGAfLn5/SRhOUrM802o2WRhynVaFIN8G44Jjak6rJCVo/saRxFvcSnij1sqGLt0AZ+ASdaC+Rv/yNouR/EdIVLuKmEC4vV6Biz8vOjMkXkIvwS47WxJxDw7Gguk65wPxL7CQi8Xa+c1IcDsDA1da8Io7UsV1KmSKhgGb3PAjVzmBYM=\"\r\n    alipay-public-key: \'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtVH6f8imsj5vyoSHDdBCzIOs5mQ9JikwRaf6kiEPqNTUiyik9kaVsikCLURuIxFmCYV9QJJruxPLNJSztTprVOvt3hbbzkEUGUs9plPCfaX0xUGpz/wFhGJNFgjaUdWmBwwRsFtbpiRFiK01EvkRB835oemav4noUuAVBkmCyqAWRXMJkX+LxXKP+B3rlIl8Cif2iZ9Kl+bQb2AOeW7BC3XTnNo4cjYojoTsu9RdlWY7sce9fOJcbGSoqYYMaw2Ij+eyMaV5wNbVqvRsGSk458xtitxlNn1tow3Moz0maHjS2viyiWF9NzEVNZJgt99DDa1HC9IONChnzMcyhstRpQIDAQAB\'\r\n    #pkcs8: \"SSY+B/QyzxaKjET3y22CBQ==\"\r\n    #certPath: \"/home/foo/appCertPublicKey_2019091767145019.crt\"\r\n    #alipay-public-cert-path:  \"/home/foo/alipayCertPublicKey_RSA2.crt\"\r\n    #root-cert-path: \"/home/foo/alipayRootCert.crt\"\r\n    # 充值回调接口\r\n    return-url: \"http://192.168.0.31:8012/payment/payCurrency/payforReturn\"\r\n    return-order-url: \"http://192.168.0.31:8011/order/orderInfo/payforReturn\"\r\n    #当面付最大查询次数和查询间隔（毫秒）\r\n    max-query-retry: 5\r\n    query-duration: 5000\r\n    #当面付最大撤销次数和撤销间隔（毫秒）\r\n    max-cancel-retry: 3\r\n    cancel-duration: 2000\r\n    #交易保障线程第一次调度延迟和调度间隔（秒）\r\n    heartbeat-delay: 5\r\n    heartbeat-duration: 900\r\n  weipay: \r\n    appid: \"wx2e0efccb1fbfbb1b\"\r\n    mchid: \"1606297754\"\r\n    #gatewayHost: https://api.mch.weixin.qq.com/sandboxnew/pay/micropay\r\n    #gatewayHost: https://api.mch.weixin.qq.com/pay/micropay\r\n    certPath: \"apiclient_cert.p12\"\r\n    key: \"126R96C73d63JB729F2Df24fae70H98G\"\r\n    return-url: \"http://192.168.0.31:8012/payment/payCurrency/payforReturnWeixin\"\r\n    return-order-url: \"http://192.168.0.31:8011/order/orderInfo/payforReturnWeixin\"', 'c0dff41949ae4c7a59462ce33cf0d68e', '2021-03-19 01:25:45', '2021-03-19 01:25:45', NULL, '192.168.0.200', 'zc-payment-server', '486c19f0-ebdf-4a52-85a8-f5691403b59a', '用户配置', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (27, 'application-gateway', 'DEFAULT_GROUP', 'spring:\r\n  cloud:\r\n    gateway:\r\n      discovery:\r\n        locator:\r\n          # 开启从注册中心动态创建路由的功能，利用微服务名称进行路由\r\n          enabled: true\r\n          lower-case-service-id: true\r\n#      globalcors:\r\n#        add-to-simple-url-handler-mapping: true\r\n#        corsConfigurations:\r\n#          \'[/**]\':\r\n#            allowedOrigins:\r\n#              - \"192.168.0.20\" # 此处为需跨域的地址\r\n#            allowedHeaders:\r\n#              - \"*\"\r\n#            allowCredentials: true\r\n#            maxAge: 360000\r\n#            allowedMethods:\r\n#              - GET\r\n#              - POST\r\n#              - DELETE\r\n#              - PUT\r\n#              - OPTIONS\r\n#              - HEAD\r\n      routes:\r\n        - id: zc-data-provider\r\n          uri: lb://zc-data-provider\r\n#          uri: http://192.168.0.31:8006\r\n          predicates:\r\n            - Path=/data/provider/**\r\n            \r\n        - id: zc-data-server \r\n          # 路由的id,没有规定规则但要求唯一,建议配合服务名\r\n          #匹配后提供服务的路由地址\r\n#          uri: http://192.168.0.31:8002\r\n          uri: lb://zc-data-server\r\n          predicates:\r\n            - Path=/data/**\r\n            # 断言，路径相匹配的进行路由\r\n\r\n        - id: zc-security-server\r\n#          uri: http://192.168.0.31:8001\r\n#          uri: http://192.168.0.20:8001\r\n          uri: lb://zc-security-server\r\n          predicates:\r\n            - Path=/security/**\r\n            #断言,路径相匹配的进行路由\r\n#          - After=2020-03-12T15:44:15.064+08:00[Asia/Shanghai]\r\n\r\n        - id: zc-product-server\r\n#          uri: http://192.168.0.31:8003\r\n          uri: lb://zc-product-server\r\n          predicates:\r\n            - Path=/product/**\r\n\r\n        - id: zc-criterion-server\r\n#          uri: http://192.168.0.31:8010\r\n          uri: lb://zc-criterion-server\r\n          predicates:\r\n            - Path=/criteria/**\r\n\r\n        - id: zc-record-server\r\n#          uri: http://192.168.0.31:8007\r\n          uri: lb://zc-record-server\r\n          predicates:\r\n            - Path=/record/**\r\n\r\n        - id: zc-solr-server\r\n#          uri: http://192.168.0.31:8005\r\n          uri: lb://zc-solr-server\r\n          predicates:\r\n            - Path=/solr/**\r\n\r\n        - id: zc-trace-server\r\n#          uri: http://192.168.0.31:8009\r\n          uri: lb://zc-trace-server\r\n          predicates:\r\n            - Path=/trace/**\r\n\r\n        - id: zc-order-server\r\n#          uri: http://192.168.0.31:8011\r\n          uri: lb://zc-order-server\r\n          predicates:\r\n            - Path=/order/**\r\n\r\n        - id: zc-payment-server\r\n          uri: lb://zc-payment-server\r\n#          uri: http://192.168.0.31:8012\r\n          predicates:\r\n            - Path=/payment/**\r\n            \r\n        - id: zc-manage-com\r\n          uri: lb://zc-manage-com\r\n#          uri: http://192.168.0.31:8008\r\n          predicates:\r\n            - Path=/manage/**\r\n            \r\n        - id: zc-api-server\r\n          uri: lb://zc-api-server\r\n#          uri: http://192.168.0.31:8019\r\n          predicates:\r\n            - Path=/api/**\r\n\r\n        - id: zc-zensyori-server\r\n          uri: lb://zc-zensyori-server\r\n          predicates:\r\n            - Path=/zensyo/**\r\n            \r\n        - id: zc-message-center\r\n          uri: lb://zc-message-center\r\n          predicates:\r\n            - Path=/message/**\r\n\r\n', 'b38e7182f6ed9e169c7f41f5b60c17f1', '2021-03-19 01:34:24', '2021-03-19 01:34:24', NULL, '192.168.0.200', 'zc-project-gateway', '486c19f0-ebdf-4a52-85a8-f5691403b59a', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (28, 'zc-record-server', 'DEFAULT_GROUP', '# 自定义的配置信息\r\nuser:\r\n  doc-temp: \"docs/temp/\"\r\n  doc-path: \"docs/record/\"        \r\n  phantomjs: \"http://192.168.0.103:9090\"\r\n  doc-images: \"../../images/\"\r\n  font-path: simsun/微软雅黑.ttf\r\n  year: 2020', '4134228e4238d3d6e486a2e7fab896a1', '2021-03-19 01:35:20', '2021-03-19 01:35:20', NULL, '192.168.0.200', 'zc-record-server', '486c19f0-ebdf-4a52-85a8-f5691403b59a', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (29, 'application-security', 'DEFAULT_GROUP', 'phone:\r\n  accessKeyId: LTAI4GKWHEe3Sj1h1iDx7q32\r\n  accessKeySecret: CI1yuGhN2eW8b9UbDeFMYvp5j9IoWB\r\n  signName: 中策征信\r\n  templateCode: SMS_205276160\r\n  # 此处的模板中 \'order\' 对应阿里云短信模板中设置的${order}\r\n  # {order_title} 对应系统替换的关键词\r\n  # 此处代码无需修改 仅需在模板中需要出现的位置填写 ${order}或 ${username}\r\n#  templateParam: \'{\"order\":{order_title},\"username\":{username}}\'', '1352ceba363369adfd75f5c31d94b940', '2021-03-19 01:36:42', '2021-03-19 01:36:42', NULL, '192.168.0.200', 'zc-security-server', '486c19f0-ebdf-4a52-85a8-f5691403b59a', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (30, 'application-solr', 'DEFAULT_GROUP', 'spring:\r\n  data:\r\n    solr:\r\n      host: http://192.168.0.105:8983/solr\r\n      repositories:\r\n        enabled: true', 'e01a73ed8312869c07e3a43aaa9f2011', '2021-03-19 01:37:55', '2021-03-19 01:37:55', NULL, '192.168.0.200', '', '486c19f0-ebdf-4a52-85a8-f5691403b59a', '数据源，solr', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (31, 'application-mail', 'DEFAULT_GROUP', 'spring:\r\n  mail:\r\n    host: smtp.exmail.qq.com\r\n    username: zc@zcxycx.com\r\n    password: 82441909Aa\r\n    from: zc@zcxycx.com\r\n    properties:\r\n      mail:\r\n        smtp:\r\n          socketFactory:\r\n            port: 465\r\n            class: javax.net.ssl.SSLSocketFactory\r\n            fallback: false\r\n          auth: true\r\n          starttls:\r\n            enable: true\r\n            required: true', '7f31f2321466f0bb964dc3281781d954', '2021-03-19 01:38:40', '2021-03-19 01:38:40', NULL, '192.168.0.200', '', '486c19f0-ebdf-4a52-85a8-f5691403b59a', '邮箱服务，', NULL, NULL, 'text', NULL);
INSERT INTO `config_info` VALUES (32, 'application-taskcenter', 'DEFAULT_GROUP', 'phone:\r\n  accessKeyId: LTAI4GKWHEe3Sj1h1iDx7q32\r\n  accessKeySecret: CI1yuGhN2eW8b9UbDeFMYvp5j9IoWB\r\n  signName: 中策征信\r\n  templateCode: SMS_205276160\r\n  # 此处的模板中 \'order\' 对应阿里云短信模板中设置的${order}\r\n  # {order_title} 对应系统替换的关键词\r\n  # 此处代码无需修改 仅需在模板中需要出现的位置填写 ${order}或 ${username}\r\n  templateParam: \'{\"order\":{order_title},\"username\":{username}}\'     ', '6bb06672c89b2372175defdf32111ef5', '2021-03-19 01:40:09', '2021-03-19 01:40:09', NULL, '192.168.0.200', 'zc-taskcenter-server', '486c19f0-ebdf-4a52-85a8-f5691403b59a', '用户配置，短信服务', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (33, 'application-mongodb', 'DEFAULT_GROUP', 'spring:  \r\n  data:\r\n    mongodb:\r\n      host: 192.168.0.103\r\n      port: 27017\r\n      database: zc_zensyo', '923a9712434f8c5a546349dfeda050a9', '2021-03-19 01:41:08', '2021-03-19 01:41:08', NULL, '192.168.0.200', '', '486c19f0-ebdf-4a52-85a8-f5691403b59a', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (48, 'application-logs.yml', 'DEFAULT_GROUP', 'logging:\r\n  level:\r\n    root: INFO\r\n    org:\r\n      springframework:\r\n        web: DEBUG\r\n        security: DEBUG\r\n  file:\r\n    path: /log/', 'dab4b232b0fab72909d3e6c38d2e1073', '2021-07-18 20:21:19', '2021-07-18 20:21:19', NULL, '192.168.0.200', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (49, 'application-datasource.yml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    # 当前数据源操作类型\n    type: com.alibaba.druid.pool.DruidDataSource\n    # mysql驱动类\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.0.103:3306/data?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true&allowMultiQueries=true\n    username: root\n    password: Root@123\n    druid:\n      max-active: 30\n      initial-size: 10\n      validation-query: \"SELECT 1\"\n      test-on-borrow: true\n      \nmybatis:\n  mapper-locations: classpath*:mapper/*.xml\n#  mapper-locations: classpath*:mapper/*.xml\n#  type-aliases-package: com.zc.entity;com.zc.zcEntities\n  configuration:\n    # Mybatis实体类属性与数据库表列名对应规则：驼峰转换\n    mapUnderscoreToCamelCase: true\n    callSettersOnNulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\nmybatis-plus:\n  mapper-locations: classpath*:mapper/*.xml \n  configuration:\n    # Mybatis实体类属性与数据库表列名对应规则：驼峰转换\n    mapUnderscoreToCamelCase: true\n    callSettersOnNulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl', '4a3fa08d70c567e3fd5353fe2d241316', '2021-07-18 21:07:13', '2022-05-31 01:42:07', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (52, 'application-nacos.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:  \n    nacos:  \n      server-addr: 192.168.0.103:8848  # nacos的信息\n      discovery:  # 容器化后nacos不能找到，需要配置宿主机的ip 和服务的端口，\n         # 宿主机的ip\n        ip: ${LOCAl_IP}\n        port: ${server.port}  \n\n\nribbon:  \n  ReadTimeout: 900000\n  ConnectTimeout: 900000\n  MaxAutoRetries: 0 #对当前实例的重试次数\n  MaxAutoRetriesNextServer: 1 #切换实例的重试次数 1\nfeign:\n  hystrix:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 300000\n        readTimeout: 300000\n    \nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            timeoutInMilliseconds: 1000000  #熔断超时时间\n\n', '54e85f61b75bea75404a5a4823e51ddb', '2021-07-18 21:10:55', '2021-12-23 01:05:12', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (54, 'application-gateway.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    gateway:\n      httpclient:\n        pool:\n          maxIdleTime: 10000 #（根据需要调整）\n      discovery:\n        locator:\n          enabled: true # 开启从注册中心动态创建路由的功能，利用微服务名称进行路由\n          lower-case-service-id: true\n\n      routes:\n        - id: zc-data-provider\n          uri: lb://zc-data-provider\n          predicates:\n            - Path=/data/provider/**\n            \n        - id: zc-data-server # 路由的id,没有规定规则但要求唯一,建议配合服务名\n          #匹配后提供服务的路由地址\n          uri: lb://zc-data-server\n          predicates:\n            - Path=/data/** # 断言，路径相匹配的进行路由\n\n        - id: zc-security-server\n          uri: lb://zc-security-server\n          predicates:\n            - Path=/security/** #断言,路径相匹配的进行路由\n#          - After=2020-03-12T15:44:15.064+08:00[Asia/Shanghai]\n\n        - id: zc-product-server\n          uri: lb://zc-product-server\n          predicates:\n            - Path=/product/**\n\n        - id: zc-criterion-server\n          uri: lb://zc-criterion-server\n          predicates:\n            - Path=/criteria/**\n\n        - id: zc-record-server\n          uri: lb://zc-record-server\n          predicates:\n            - Path=/record/**\n\n        - id: zc-solr-server\n          uri: lb://zc-solr-server\n          predicates:\n            - Path=/solr/**\n\n        - id: zc-order-server\n          uri: lb://zc-order-server\n          predicates:\n            - Path=/order/**\n\n        - id: zc-payment-server\n          uri: lb://zc-payment-server\n          predicates:\n            - Path=/payment/**\n            \n        - id: zc-manage-com\n          uri: lb://zc-manage-com\n          predicates:\n            - Path=/manage/**\n            \n        - id: zc-api-server\n          uri: lb://zc-api-server\n          predicates:\n            - Path=/api/**\n        \n        - id: nosql-query-server\n          uri: lb://nosql-query-server\n          predicates:\n            - Path=/nosql/**\n\n        - id: zc-zensyori-writer\n          uri: lb://zc-zensyori-writer\n          predicates:\n            - Path=/zensyo/writer/**          \n\n        #- id: zc-zensyori-writer-finance-aid\n        #  uri: lb://zc-zensyori-writer-finance-aid\n        #  predicates:\n        #    - Path=/zensyo/writer/**                 \n\n        - id: zc-zensyori-server\n          uri: lb://zc-zensyori-server\n          predicates:\n            - Path=/zensyo/**\n            \n        - id: zc-message-center\n          uri: lb://zc-message-center\n          predicates:\n            - Path=/message/**\n\n        - id: zc-taskcenter-server\n          uri: lb://zc-taskcenter-server\n          predicates:\n            - Path=/taskcenter/**\n\n        - id: zc-history-help\n          uri: lb://zc-history-help\n          predicates:\n            - Path=/historyHelp/**            \n\n        - id: zc-history-solr\n          uri: lb://zc-history-solr\n          predicates:\n            - Path=/historySolr/**           \n        - id: zc-sidecar\n          uri: lb://zc-sidecar\n          predicates:\n            - Path=/sidecar/**             ', '75b186eb1d2cf1722b54b5c97d8ac107', '2021-07-21 06:19:30', '2022-06-19 20:55:17', 'nacos', '192.168.0.200', 'zc-project-gateway', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (55, 'application-api.yml', 'DEFAULT_GROUP', 'user:\n  file-download-path: download\n  file-upload-path: upload\n  report-path: \"record/\"\n  years: 2015,2016,2017,2018,2019,2020\n  year: 2020\n  table-name: \"`data`.base_company_8_3\"\n  local: \"D:/workspace/zc-project-20210716/zc-record-server/docs/record/\"', '275b456045ad1cbeac0de34966790d0a', '2021-07-21 07:40:41', '2021-12-03 00:23:32', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (60, 'application-datasource-manager.yml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    # 当前数据源操作类型\n    type: com.alibaba.druid.pool.DruidDataSource\n    # mysql驱动类\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.0.103:3306/zc_manager?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\n    username: root\n    password: Root@123\n    druid:\n      max-active: 100\n      initial-size: 10\n      validation-query: \"SELECT 1\"\n      test-on-borrow: true\n      \nmybatis:\n  mapper-locations: classpath*:mapper/*.xml\n#  mapper-locations: classpath*:mapper/*.xml\n#  type-aliases-package: com.zc.entity;com.zc.zcEntities\n  configuration:\n    # Mybatis实体类属性与数据库表列名对应规则：驼峰转换\n    mapUnderscoreToCamelCase: true\n    callSettersOnNulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\nmybatis-plus:\n  mapper-locations: classpath*:mapper/*.xml \n  configuration:\n    # Mybatis实体类属性与数据库表列名对应规则：驼峰转换\n    mapUnderscoreToCamelCase: true\n    callSettersOnNulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl', '0ad937a3c0aefb9ac43dbd5077310ee7', '2021-07-21 08:34:16', '2021-09-15 03:19:07', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (71, 'application-datasources.yml', 'DEFAULT_GROUP', 'spring:\n#  写入数据源\n  datasource:\n    # 当前数据源操作类型\n    type: com.alibaba.druid.pool.DruidDataSource\n    # mysql驱动类\n    driver-class-name: com.mysql.cj.jdbc.Driver\n#    url: jdbc:mysql://localhost:3306/db2019?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8\n    url: jdbc:mysql://192.168.0.103:3306/zc_security?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\n    username: root\n    password: Root@123\n#  读数据源\n  db:\n    type: com.alibaba.druid.pool.DruidDataSource\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.0.103:3306/zc_security?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\n    username: root\n    password: Root@123\n    druid:\n      max-active: 30\n      initial-size: 10\n      validation-query: \"SELECT 1\"\n      test-on-borrow: true\n', '4bf991c78703a2a84bdf13754188c3ae', '2021-07-21 08:50:02', '2021-08-29 21:20:14', 'nacos', '192.168.0.200', '', '', 'security', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (73, 'application-redis.yml', 'DEFAULT_GROUP', 'spring:\n  #redis集群配置\n  cache:\n    type: redis\n    redis:\n      time-to-live: 60000\n  redis:\n    jedis:\n      pool:\n        max-active: 8\n        max-wait: -1\n        max-idle: 8\n        min-idle: 0\n    timeout: 10001\n    cluster:\n      max-redirects: 3\n#      nodes: 192.168.0.104:6379,192.168.0.104:6380,192.168.0.104:6381\n      nodes:\n        - 192.168.0.103:6379\n        - 192.168.0.103:6380\n        - 192.168.0.103:6381\n    lettuce:\n      cluster:\n        refresh:\n          adaptive: true\n      pool:\n        max-active: 16\n        max-idle: 16\n        min-idle: 16\n    password: \'\'\n    database: 0', '5123b073cd4941268a3a180a992b326b', '2021-07-21 08:50:25', '2021-08-29 20:57:29', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (77, 'application-phone.yml', 'DEFAULT_GROUP', 'phone:\r\n  accessKeyId: LTAI4GKWHEe3Sj1h1iDx7q32\r\n  accessKeySecret: CI1yuGhN2eW8b9UbDeFMYvp5j9IoWB\r\n  signName: 中策征信\r\n  templateCode: SMS_205276160\r\n  allowRegist: true\r\n  # 此处的模板中 \'order\' 对应阿里云短信模板中设置的${order}\r\n  # {order_title} 对应系统替换的关键词\r\n  # 此处代码无需修改 仅需在模板中需要出现的位置填写 ${order}或 ${username}\r\n#  templateParam: \'{\"order\":{order_title},\"username\":{username}}\'', 'a33370d4da45169d81beeefc0e1cdf0a', '2021-07-21 08:53:26', '2021-07-21 08:53:26', NULL, '10.0.0.2', '', '', 'security 验证码', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (79, 'application-dev.yml', 'DEFAULT_GROUP', 'dev: true', 'f383e1daa3bf6a03d1a607a9c9e19646', '2021-07-21 09:31:20', '2021-07-21 09:31:20', NULL, '10.0.0.3', '', '', '开发模式 空文件', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (82, 'application-prod.yml', 'DEFAULT_GROUP', 'dev: false', 'a2ad5fb3539839480d98a71744614962', '2021-07-21 09:31:58', '2021-07-21 09:31:58', NULL, '10.0.0.3', '', '', '生产模式空文件', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (85, 'application-criteria.yml', 'DEFAULT_GROUP', '#企业绩效标准值文件\r\n#临时策略。后迁移到Redis里面。\r\ncriteria:\r\n  #标准文件路径\r\n  #纯开发环境\r\n  file-path: docs/CompanyCriteria.xls\r\n  #发布环境\r\n#  file-path: /docs/zc-criterion-server/CompanyCriteria.xls\r\n  #国家标准\r\n  national-file-path: docs/NationalEconomicIndustryClassifiedExcel.xlsx\r\n  #总行业等级娄攵\r\n  total-industry-path-stages: 5\r\n  #标准起始列(sheet3)\r\n  according-begin-column: 3\r\n  #总标准数(sheet3)\r\n  total-accordings: 3\r\n  #标准实际数据结束行\r\n  according-end-row: 50\r\n  #项名相似度阈值\r\n  #  term-name-similarititude-threshold: 0.88\r\n  term-name-similarititude-threshold: 0.6\r\n  #行业名相似度阈值\r\n  industry-name-similarititude-threshold: 0.62\r\n  #前2差异率\r\n  industry-name-similarititude-different-rate-top2: 1.9\r\n  #默认行业名\r\n  default-industry-name: 全国国有企业\r\n', '340c4ae3cc1a73a78f0329086a212de1', '2021-07-21 09:33:15', '2021-07-21 09:33:15', NULL, '10.0.0.2', '', '', 'application-criteria', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (87, 'application-manage.yml', 'DEFAULT_GROUP', 'user:\n#  table_code\n  marker:\n    # (总)关联关系\n    relCode: RELATION_OIS\n    # 股东及出资信息\n    stockholderAndPledge: basegudong\n    # 分支机构\n    branch: basefenzhijigou\n    # 对外投资\n    investment: baseduiwaitouzi\ntable-alias:  \n  base-company-table-name: \'`data`.`base_company_8_3`\'\n\n#关联关系·对外投资\ninvestment:\n  # 需要预处理的对外投资的年分\n  # 第一次会慢；后面根据需要调整所需年分\n  preYears:\n    - 2015\n    - 2016\n    - 2017\n    - 2018\n    - 2019\n#关联关系\nrelation-ois:\n  code: RELATION_OIS\n  marker:\n    # 股东及出资信息\n    stockholderAndPledge:\n      code: basegudong\n      table: \'`data`.base_owner\'\n    # 分支机构\n    branch:\n      code: basefenzhijigou\n      table: \'`data`.base_subsidiary\'\n    # 对外投资\n    investment:\n      code: baseduiwaitouzi\n      table: \'`data`.base_investment\'  ', 'b806cb9869717bfb55e508322ec3d90c', '2021-07-21 09:39:07', '2021-12-07 21:05:04', 'nacos', '192.168.0.200', '', '', 'manage', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (88, 'application-metadata.yml', 'DEFAULT_GROUP', 'user:\n  business-status-list:\n    - 存续\n    - 在业\n    - 在营\n    - 迁入\n    - 迁出\n    - 筹建\n    - 清算\n    - 停业\n    - 注销\n    - 撤销\n    - 吊销\n    - 吊销未注销\n    - 吊销已注销', 'e6536fe2e182bee441de6bff7dd9ea62', '2021-07-21 09:42:02', '2021-09-28 02:35:49', '', '192.168.0.127', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (90, 'application-datasource-order.yml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    # 当前数据源操作类型\n    type: com.alibaba.druid.pool.DruidDataSource\n    # mysql驱动类\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.0.103:3306/zc_order?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\n    username: root\n    password: Root@123\n    druid:\n      max-active: 30\n      initial-size: 10\n      validation-query: \"SELECT 1\"\n      test-on-borrow: true\n      \nmybatis:\n  mapper-locations: classpath*:mapper/*.xml\n#  mapper-locations: classpath*:mapper/*.xml\n#  type-aliases-package: com.zc.entity;com.zc.zcEntities\n  configuration:\n    # Mybatis实体类属性与数据库表列名对应规则：驼峰转换\n    mapUnderscoreToCamelCase: true\n    callSettersOnNulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\nmybatis-plus:\n  mapper-locations: classpath*:mapper/*.xml ', '3e42bcd22b0625c524280e4711dae22f', '2021-07-21 09:42:58', '2021-08-29 21:20:36', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (91, 'application-payment.yml', 'DEFAULT_GROUP', 'user:\r\n  alipay:\r\n    #支付宝网关名、partnerId和appId\r\n    #open-api-domain: \"https://openapi.alipaydev.com/gateway.do\"\r\n    #mcloud-api-domain: \"http://mcloudmonitor.com/gateway.do\"\r\n    protocol: \"https\"\r\n    gatewayHost: \"openapi.alipay.com\"\r\n    signType: RSA2\r\n    #此处请填写你的PID\r\n    #pid: \"2016092200569807\"\r\n    #此处请填写你当面付的APPID \r\n    app-id: \"2017103109634394\"\r\n    merchant-private-key: \"MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQCxiXSjSWaDEHMJ1+zu5KennAUJEjDzCoR1L+XFqDnNUqGnhnQddQUWW2uD1IP9OcmVOvGs2SjSvh8ExAHUnsXQ3XnZK2p7VPbtIOzu6ujl2iyoyQwKAxqplulu8i7i8ER5go+JZHwUZMyIeaLYahIOcG1kyT7X6/XcPUv0SwRkXHX1PSZ0lNP+EX079C2Il5jtB1KiHc/FRkH5Gxz6AubgqVrC/IcwAE9PH1N5wuFh4FU9w28LUhM+xQdTPU7gR9C3ppyfvk5f50xeR1mWspHW5lC+jj/k60DN+zwXdxzYRd/G+yo3WAZsbB4jLKVd/dQR3A3vG2OMgOcsEsmQO/9LAgMBAAECggEBAJSvD5Xo1QeS8SUfRvjTWm2OxtDQAVqqRkB2erJMrwv71hKdEgXRiQ8uRR7FDj029lIaaWhe/kdwnj25geb1iangsjlkmOrtP1dcqdF1vtMxIxHAPmrsKpo5HwqhnQ7GNjKlW1yvYRMbUAhEBlPEkZayJYuw1wayQNfQJhpT8TuypYarRh43lXSoEnAkTYOEtjQLtueENAAov9d/1k04CQJIc056qk0KNf+L3WjuRmSnHHPhwBs6wTuBEJQ4xf8EqhIoUirfjEjpdcM0x1mthSW0pjpNKVqaih4PMaqGQbeIMrBtcv6U0P9f4APcEpY6SPbfvwlZmW/3hPrAgqNmqgECgYEA5twoxi4aoZwqpnZdcjkmLeffLGzKRHsURQ3I5FIyH2wMbaTvPXvXvffTwxXct3hcVhVaY31p2Zz/hWCXyuhTsPPNSyZA5mwQGftPAZ9kaEkMrJDOGaHfoO5m4OXjRuRZleP/L3pVhcyNHSagwjlWi58gBzwyCra4iE5HchgrxYECgYEAxN7F8GIZpizQ2ye6zmpwPnRodHo2K8/LIfrawMom44X1AdTcd/b8JBQJsQk4Ct9GetuD4hD1Ssa/fYnwH4yNZ1j4pqM1OgRmVp/arTdlmc6BpYbi9JbQryQli420k9C1Zi1GddYJ8Gy/TKQrI9zGG56j20xEk0n95IXWxZdrYssCgYEAyvQ7yFZZxT/0YtlmN3e0b+EL2xNdEq0dWcPPm6IDPIqRtoasaGIKfZB1E2mR252tl2Q4TYTA3LXgEVKkv5ZVlRgQoANmROw1j5HWmDeXXvLxeHfpKLGdVu6fdRHFJ9qyQ0roWcXzj6gPWtRNudIMmrxuvM2XtMGEIximSNClEoECgYBGcuGqL7C2AnuKsSDsFLKt5sIqTEFuVCGAu1/kdXKNILaYPS/Xzg5Uasc9Dut7GIMEG+GJ2D+uzohfyCihYY6IWRJBr02wwTpN7U43hgdZjsheD3LPy9hJlEnLMp5X9uuy8KiyKjHMU13xcx3s62gJIi/InfY8LtIoIKzGcHUBGQKBgEjbov6zc7kYH6d9FLR9KIHHOEiKWkAlFcd/dzx/Ft+R4uFfpoCERQ9f9Q/7M3EHLF0DB7u6qQQSEKE7WG7es9DzU0swhGmbc5qrSfHE4fltAfTQI+jQb7+xDCNnZrIAjqZbllzN98WUdD5znTj7WtUSwBNkjE0d9qFj7oO5bCjj\"\r\n    #alipay-public-key: \'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAtVH6f8imsj5vyoSHDdBCzIOs5mQ9JikwRaf6kiEPqNTUiyik9kaVsikCLURuIxFmCYV9QJJruxPLNJSztTprVOvt3hbbzkEUGUs9plPCfaX0xUGpz/wFhGJNFgjaUdWmBwwRsFtbpiRFiK01EvkRB835oemav4noUuAVBkmCyqAWRXMJkX+LxXKP+B3rlIl8Cif2iZ9Kl+bQb2AOeW7BC3XTnNo4cjYojoTsu9RdlWY7sce9fOJcbGSoqYYMaw2Ij+eyMaV5wNbVqvRsGSk458xtitxlNn1tow3Moz0maHjS2viyiWF9NzEVNZJgt99DDa1HC9IONChnzMcyhstRpQIDAQAB\'\r\n    #pkcs8: \"SSY+B/QyzxaKjET3y22CBQ==\"\r\n    certPath: \"appCertPublicKey_2017103109634394.crt\"\r\n    alipay-public-cert-path:  \"alipayCertPublicKey_RSA2.crt\"\r\n    root-cert-path: \"alipayRootCert.crt\"\r\n    # 充值回调接口\r\n    return-url: \"http://192.168.0.31:8012/payment/payCurrency/payforReturn\"\r\n    return-order-url: \"http://192.168.0.31:8011/order/orderInfo/payforReturn\"\r\n    #当面付最大查询次数和查询间隔（毫秒）\r\n    max-query-retry: 5\r\n    query-duration: 5000\r\n    #当面付最大撤销次数和撤销间隔（毫秒）\r\n    max-cancel-retry: 3\r\n    cancel-duration: 2000\r\n    #交易保障线程第一次调度延迟和调度间隔（秒）\r\n    heartbeat-delay: 5\r\n    heartbeat-duration: 900\r\n  weipay: \r\n    appid: \"wx0f2dd4eb60f6091c\"\r\n    mchid: \"1606297754\"\r\n    certPath: \"apiclient_cert.p12\"\r\n    key: \"4d94b6736a29f050c29c47a1edceb239\"\r\n    return-url: \"http://192.168.0.31:8012/payment/payCurrency/payforReturnWeixin\"\r\n    return-order-url: \"http://192.168.0.31:8011/order/orderInfo/payforReturnWeixin\"', '4e30be39c474a05168c9681333b879c1', '2021-07-21 09:45:47', '2021-07-21 09:45:47', NULL, '10.0.0.3', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (94, 'application-product.yml', 'DEFAULT_GROUP', 'user:\n  last-year-load: true\n  compute-years: 14\n  vol-suffix-length: 4\n  company-core: zc_company\n  mongo-company-uid: _id\n  total-completable-threshold: 0.64\ntable-alias:  \n  base-company-table-name: \'`data`.`base_company_8_3`\'  ', 'd2de9046783def140a7cdd5381605050', '2021-07-21 09:47:06', '2022-02-18 04:26:42', 'nacos', '192.168.0.127', '', '', 'product', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (97, 'application-record.yml', 'DEFAULT_GROUP', '# 自定义的配置信息\nuser:\n  doc-temp: \"docs/temp/\"\n  doc-path: \"docs/record/\"        \n  phantomjs: \"http://phantomjs.com:9090/phantomjs\"\n  doc-images: \"../../images/\"\n  font-path: simsun/yahei.ttf\n  year: 2020', '96ba741ff94f2b23f2b334487e13daa5', '2021-07-21 09:54:17', '2021-12-15 01:58:24', 'nacos', '192.168.0.200', '', '', 'zc-record-server', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (103, 'application-solr.yml', 'DEFAULT_GROUP', 'spring:\n  data:\n    solr:\n      mode:\n        alone: false\n      host: http://192.168.0.103:28985/solr\n      #host: http://192.168.0.105:8983/solr\n#      host: http://192.168.0.40:8983/solr\n      repositories:\n        enabled: true\n      collection: zc_company\n      #      collection: zc\n      companiesKey: companies\n      \nuser:\n  core: zc_company\n  # 查询策略\n  edismax:\n    enabled: true\n    qf:\n      - company_name_ik\n      - h_company_name\n    mm:\n      - 59%\n      # - 95%\n  solr:\n    - score: \" AND registration_date:[ 2012-01-11 TO 2017-01-11] AND registrationNumber:15* AND companyType:*有限责任公司* AND businessStatus:(存续 OR 在营（开业）企业 OR 存续（在营、开业、在册） OR 开业) AND (registrationCapital_nbd:[*  TO 499.9999999 ]  OR ( *:* NOT registrationCapital_nbd:*)) AND score:[ 73.52759 TO *] AND !industryScope: (\\\"SMALL_ENTERPRISE_V1\\\" OR \\\"MEDIUM_ENTERPRISE_V1\\\" OR \\\"HUGE_ENTERPRISE\\\")\"\n    - nasui: \" AND registration_date:[ 2012-01-12 TO 2017-01-12] AND registrationNumber:15* AND companyType:*有限责任公司* AND businessStatus:(存续 OR 在营（开业）企业 OR 存续（在营、开业、在册） OR 开业) AND (registrationCapital_nbd:[*  TO 499.9999999 ]  OR ( *:* NOT registrationCapital_nbd:*)) AND ratgro_nbd:[ 7.563 TO *] AND !industryScope: (\\\"SMALL_ENTERPRISE_V1\\\" OR \\\"MEDIUM_ENTERPRISE_V1\\\" OR \\\"HUGE_ENTERPRISE\\\")\"\n    - count: \" AND registration_date:[ 2012-01-12 TO 2017-01-12] AND registrationNumber:15* AND companyType:*有限责任公司* AND businessStatus:(存续 OR 在营（开业）企业 OR 存续（在营、开业、在册） OR 开业) AND (registrationCapital_nbd:[*  TO 499.9999999 ]  OR ( *:* NOT registrationCapital_nbd:*)) AND !industryScope:  (\\\"SMALL_ENTERPRISE_V1\\\" OR \\\"MEDIUM_ENTERPRISE_V1\\\" OR \\\"HUGE_ENTERPRISE\\\")\"\n    - count2: \" AND registration_date:[ 2012-01-12 TO 2017-01-12] AND registrationNumber:15* AND companyType:*有限责任公司* AND businessStatus:(存续 OR 在营（开业）企业 OR 存续（在营、开业、在册） OR 开业) AND (registrationCapital_nbd:[*  TO 499.9999999 ]  OR ( *:* NOT registrationCapital_nbd:*)) \"\n  hl:\n    enabled: true', '48cab7d1f18761b063ed39d3d00862b7', '2021-07-21 09:58:50', '2022-01-11 19:33:35', 'nacos', '192.168.0.200', '', '', 'solr', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (106, 'application-mail.yml', 'DEFAULT_GROUP', 'spring:\n  mail:\n    host: smtp.exmail.qq.com\n    username: zcxycx@zcxycx.com\n    password: 82441909Aa\n    from: zcxycx@zcxycx.com\n    properties:\n      mail:\n        smtp:\n          socketFactory:\n            port: 465\n            class: javax.net.ssl.SSLSocketFactory\n            fallback: false\n          auth: true\n          starttls:\n            enable: true\n            required: true', '77d0d789dba206de7057745d9eb31c43', '2021-07-21 10:02:59', '2021-12-06 18:43:20', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (115, 'application-taskcenter.yml', 'DEFAULT_GROUP', 'phone:\n  accessKeyId: LTAI4GKWHEe3Sj1h1iDx7q32\n  accessKeySecret: CI1yuGhN2eW8b9UbDeFMYvp5j9IoWB\n  signName: 中策征信\n  templateCode: SMS_213300875\n  # 此处的模板中 \'order\' 对应阿里云短信模板中设置的${order}\n  # {order_title} 对应系统替换的关键词\n  # 此处代码无需修改 仅需在模板中需要出现的位置填写 ${order}或 ${username}\n  templateParam: \'{\"companyname\":{companyname},\"text\":{text},\"number\":{number}}\'\nuser:\n  email: 514840279@qq.com  \n  startemail: false\n#关联关系·对外投资\ninvestment:\n  # 需要预处理的对外投资的年分\n  # 第一次会慢；后面根据需要调整所需年分\n  preYears:\n    - 2015\n    - 2016\n    - 2017\n    - 2018\n    - 2019\n#关联关系\nrelation-ois:\n  code: RELATION_OIS\n  marker:\n    # 股东及出资信息\n    stockholderAndPledge:\n      code: basegudong\n      table: \'`data`.base_owner\'\n    # 分支机构\n    branch:\n      code: basefenzhijigou\n      table: \'`data`.base_subsidiary\'\n    # 对外投资\n    investment:\n      code: baseduiwaitouzi\n      table: \'`data`.base_investment\'\ntask:\n  # 最大任务池中的任务数最大1000，默认100，循环任务中自动补充任务数到多少\n  page-size: 0  \n  # x循环补充任务数的间隔时间，防止过快没有消耗任务  单位：ms  \n  sleep-time: 500000\n  base-table-name: \'`data`.base_company_8_3\'\n  start-task-find: false\n  start-task: false\n  start-count: true\n  start-score: true\n  start-solr: false\n  start-delete: false\n  start-change: false\ntable-alias:  \n  base-company-table-name: \'`data`.`base_company_8_3`\'  ', 'e24e0d1fbc257377f088fd6bddbff633', '2021-07-21 10:04:54', '2022-07-21 01:54:52', 'nacos', '192.168.0.200', 'zc-taskcenter-server', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (120, 'application-kafka.yml', 'DEFAULT_GROUP', 'spring:\n  kafka:\n    streams:\n      replication-factor: 1\n    # 指定kafka 代理地址，可以多个\n    bootstrap-servers:\n      - 192.168.0.103:19092\n      - 192.168.0.103:19093\n      - 192.168.0.103:19094\n    #=============== consumer  =======================\n    consumer:\n      auto-commit-interval: 100\n      auto-offset-reset: earliest\n      enable-auto-commit: true\n      max-poll-records: 5\n      # 指定默认消费者group id\n      group-id: user-log-group\n      # session-timeout-ms: 30000\n      # max-poll-interval-ms: 600000\n      max-poll-interval: 80000\n      # 指定消息key和消息体的编解码方式\n      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer\n      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer\n\n    #=============== provider  =======================\n    producer:\n      # 每次批量发送消息的数量\n      batch-size: 16384\n      buffer-memory: 33554432\n      # 指定消息key和消息体的编解码方式\n      key-serializer: org.apache.kafka.common.serialization.StringSerializer\n      retries: 0\n      value-serializer: org.apache.kafka.common.serialization.StringSerializer\n      compression-type: snappy\n      acks: 1\nkafla:\n  client:\n    during: 6000      ', 'e7123bd280f0ebdff264d85b9631be4c', '2021-07-21 10:28:12', '2021-08-29 20:58:35', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (123, 'application-mongodb.yml', 'DEFAULT_GROUP', 'spring:\n  data:\n    mongodb:\n      host: 192.168.0.105\n      port: 27020\n      database: zc_infos\n      username: cluster\n      password: cluster', '66bdcbbad0944501740c127dda984e92', '2021-07-21 10:28:37', '2022-09-01 05:15:05', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (126, 'application-zensyori-writer.yml', 'DEFAULT_GROUP', 'user:\n  init-matter-set:\n    # - finance\n    # - pseudo-rds-sync\n    # - pseudo-rds-rmv\n    # - patch-industry-category-to-finance\n    # - patch-scope-to-finance-quick\n    # - patch-scope-to-finance\n    - delta-finance\n    # - history-company-name\n    #- history-regno\n    # - patch-simulation-to-finance\n    - ff\n    \n  sync-log:\n    ftp-port: 221\n    ftp-host: 192.168.0.103\n    ftp-username: ftpUsr\n    ftp-password: 123456\n    ftp-file-path: /home/redis-data/node1/\n    # ftp-file-path: /home/ftpUsr\n    ftp-file-name: finance_listhash_keys.log\n\n  full-load: true\n  \n  #全量加载\n  last-year-load: true\n  #在年份池没变的情况下，重新更新最末一年的营业值。\n  compute-years: 14\n  #计算年限\n  vol-suffix-length: 4\n  #分卷后缀长度\n  page-size: 100\n  #每次处理的企业数 建议：100\n  company-table-name: base_company_8_3\n  # company-table-name: base_company_8_3\n  # company-table-name: base_company\n  # 增量表\n  finance-delta-table-name: backups.zensyori_delta\n  #finance-delta-table-name: zensyori_delta_copy1\n  enable-delta: true\n  \n  # 分发任务时清空cursor\n  finance-delta-clear-cursor: true\n  # 循环发任务，直到无任务可发\n  finance-delta-loop-task: true\n\n  \n  company-table-name-id: id\n  base-db: data\n  #finance-start-page-index: 45859139\n  finance-page-size: 400\n  # 经营分析等三个预处理前清空页标识Md5\n  clear-finance-compute-ids-md5-keys-before-zensyori: true\n  clear_history_company_name_compute_ids_md5_keys_before_zensyori: true\n  clearHistoryRegnoComputeIdsMd5KeysBeforeZensyori: true\n  # 历史名变更表\n  history-company-name-zensyo-table: base_change_by_name\n  # 历史变更每次处理的企业数 建议：100\n  history-page-size: 400\n  company-core: zc_company\n  hbase-using: true\n  \n# 补丁\npatch:\n  simulation-to-finance-conf:\n    table-name: patch_simulation_to_finance\n  email-to-finance-conf:\n    table-name: patch_simulation_to_finance\n  industry-category-to-finance-conf:\n    table-name: patch_industry_category_to_finance_remained\n  quick-scope-conf:\n    - label: G59\n      industry-code-path: 0_$G/1_$54*\n      vend-inc:\n        large: 80000\n        small: 6000\n      ass-gro:\n        large: 80000\n        small: 5000\n  \nman:\n  auto-init: true\n  finance-init: true # 初始化企业数据\n  district-init: false # 初始化地区数据\n  history-init: true # 初始化企业历史变更数据  \n\ncommon:\n  similar-threshold: 0.60  \n\nconfs:\n  scope-by-staffCount: true #按照人员匹配企业规模\n#  scope-by-staffCount: false\ntest: false\n\nmanagement:\n  health:\n    redis:\n      enabled: true  ', '91e458087f0e51084a0eb0d7f4964537', '2021-07-21 10:30:33', '2022-09-01 05:11:41', 'nacos', '192.168.0.200', '', '', 'application-zensyori-writer', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (128, 'application-zensyori-writer-finance.yml', 'DEFAULT_GROUP', 'common:\n  similar-threshold: 0.60\nman:\n  auto-init: true\nuser:\n  # 检行任务\n  complete-check-task: false\n  test: false #测试模式\n  full-load: true #全量加载\n  last-year-load: true #在年份池没变的情况下，重新更新最末一年的营业值。\n  compute-years: 14 #计算年限\n  vol-suffix-length: 4 #分卷后缀长度\n  page-size: 400 #每次处理的企业数 建议：100\n  #  finance-kafka-topic: finance #预处理企业经营数据的kafka的topic\n  # 增量任务可执行周期（单位：min）\n  delta-finance-deal-during: 6\n# 增量处理的持久化方式\n  delta-company-method: mongo\n  # delta-company-method: hbase\n  mongo-company-uid: _id\n  # mongo-company-uid: uuid\n  base-db: data\n  company-table-name: base_company_8_3\n  # company-table-name: base_company_8_3\n  company-core: zc_company\n  history-core: zc_history\n  #  主动判断是否由company_id同步预处理\n  annual-by-company-id : true\n  match-cols-with-abnormal:\n    - credit_code\n    - registration_number\n  match-cols-with-trade:\n    - credit_code\n    - registration_number\n  match-cols-with-bcis:\n    - company_id\n    - registration_number\n  pseudo-rds-sync-method: mongo\n  # pseudo-rds-sync-method: hbase\n  zensyori-log-file-path: /home/log/zensyori/logFile.xlsx\n  # 更新用set\n  light-zensyori: true\n\n  \npatch:\n  simulation-to-finance-conf:\n    table-name: patch_simulation_to_finance', 'c32525d537445d7bbf9fd7cd51b0a659', '2021-07-21 10:44:50', '2022-09-23 05:19:25', 'nacos', '192.168.0.200', '', '', 'zensyori-writer-finance', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (131, 'application-data.yml', 'DEFAULT_GROUP', 'user:\n  document-host: 192.168.0.28\n  document-ftp-port: 21\n  document-ftp-username: ftpUsr\n  document-ftp-password: 123456\n  document-path: /document\n  #  document-path: /mnt/ftp/document\n  #回显地址\n  document-ftp-httpPath: ftp://192.168.0.28\n  company-core: zc_company\n  # 默认之加载企业\n  default-company-id: 8f676541-f8eb-11eb-870e-0242ac110003\ntable-alias:  \n  base-company-table-name: \'`data`.`base_company_8_3`\'', 'e5b225fcbf19c940e6dc3a2455e486ce', '2021-07-22 03:19:54', '2021-11-29 02:11:49', 'nacos', '192.168.0.127', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (137, 'application-datasource_1.yml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    # 当前数据源操作类型\n    type: com.alibaba.druid.pool.DruidDataSource\n    # mysql驱动类\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.0.103:3306/data?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\n    username: root\n    password: Root@123\n    druid:\n      max-active: 30\n      initial-size: 10\n      validation-query: \"SELECT 1\"\n      test-on-borrow: true\n      \nmybatis:\n  mapper-locations: classpath*:mapper/*.xml\n#  mapper-locations: classpath*:mapper/*.xml\n#  type-aliases-package: com.zc.entity;com.zc.zcEntities\n  configuration:\n    # Mybatis实体类属性与数据库表列名对应规则：驼峰转换\n    mapUnderscoreToCamelCase: true\n    callSettersOnNulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\nmybatis-plus:\n  mapper-locations: classpath*:mapper/*.xml ', 'be77279b7f0ab9e3e19932af9b803479', '2021-07-27 03:00:56', '2022-02-28 00:50:38', 'nacos', '192.168.0.127', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (148, 'application-message.yml', 'DEFAULT_GROUP', 'user:\n  username: baidu\n  webset: \"https://baidu.com\"\n  doc-temp: \"test\"', '075148d5cf7d336bd20ad3e5e65be173', '2021-08-01 08:22:03', '2021-08-01 08:22:03', NULL, '10.0.0.2', '', '', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (156, 'application-datasource_1.yml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    # 当前数据源操作类型\n    type: com.alibaba.druid.pool.DruidDataSource\n    # mysql驱动类\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.0.162:3357/data?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\n    username: admin\n    password: Root@123\n    druid:\n      max-active: 30\n      initial-size: 10\n      validation-query: \"SELECT 1\"\n      test-on-borrow: true\n      \nmybatis:\n  mapper-locations: classpath*:mapper/*.xml\n#  mapper-locations: classpath*:mapper/*.xml\n#  type-aliases-package: com.zc.entity;com.zc.zcEntities\n  configuration:\n    # Mybatis实体类属性与数据库表列名对应规则：驼峰转换\n    mapUnderscoreToCamelCase: true\n    callSettersOnNulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\nmybatis-plus:\n  mapper-locations: classpath*:mapper/*.xml ', 'add572f9dcac1a5892d8bff200a16420', '2021-08-06 03:40:07', '2021-08-06 03:40:07', NULL, '10.0.0.127', '', '8152c4e7-74b5-4946-a2fe-d1add8724c4c', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (209, 'danyuan-gateway.yml', 'DEFAULT_GROUP', 'spring:\r\n  cloud:\r\n    gateway:\r\n      httpclient:\r\n        pool:\r\n          maxIdleTime: 10000 #（根据需要调整）\r\n      discovery:\r\n        locator:\r\n          enabled: true # 开启从注册中心动态创建路由的功能，利用微服务名称进行路由\r\n          lower-case-service-id: true\r\n\r\n      routes:\r\n        - id: danyuan-serve\r\n          uri: lb://danyuan-serve\r\n          predicates:\r\n            - Path=/serve/**              ', '3245dceb0fdf1f49fc51c2df59102193', '2021-08-29 21:45:16', '2021-08-29 21:45:16', NULL, '192.168.0.200', '', 'danyuan', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (210, 'danyuan-nacos.yml', 'DEFAULT_GROUP', 'spring:\r\n  cloud:  \r\n    nacos:  \r\n      # nacos的信息\r\n      server-addr: 192.168.0.103:8848\r\n      discovery:  # 容器化后nacos不能找到，需要配置宿主机的ip 和服务的端口，\r\n        namespace: danyuan\r\n         # 宿主机的ip\r\n        ip: ${LOCAL_IP}\r\n        port: ${server.port}  \r\n    #inetutils:\r\n    #  preferred-networks: 10.0.3\r\n\r\nribbon:  \r\n  ReadTimeout: 900000\r\n  ConnectTimeout: 900000\r\n   #对当前实例的重试次数\r\n  MaxAutoRetries: 0\r\n   #切换实例的重试次数 1\r\n  MaxAutoRetriesNextServer: 1\r\nfeign:\r\n  hystrix:\r\n    enabled: false\r\n  client:\r\n    config:\r\n      default:\r\n        connectTimeout: 300000\r\n        readTimeout: 300000\r\n    \r\nhystrix:\r\n  command:\r\n    default:\r\n      execution:\r\n        isolation:\r\n          thread:\r\n            #熔断超时时间\r\n            timeoutInMilliseconds: 1000000\r\n\r\n', '417542b92c841d6281e56ddd146cd63d', '2021-08-29 21:45:34', '2021-08-29 21:45:34', NULL, '192.168.0.200', '', 'danyuan', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (211, 'danyuan-h2.yml', 'DEFAULT_GROUP', 'spring:\n  jpa:\n    open-in-view: true\n    database: H2\n    show-sql: true\n    hibernate:\n      ddl-auto: create\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.H2Dialect\n  datasource:\n    platform: H2\n    driver-class-name: org.h2.Driver\n    #url = jdbc:h2:mem:dbc2m\n    #url: jdbc:h2:file:./dbh2/dbc2m;AUTO_SERVER=TRUE\n    url: jdbc:h2:tcp://localhost:9091,localhost:9092/data\n    username: sa\n    password: \n    initialization-mode: ALWAYS\n    sql-script-encoding: utf-8\n    separator: ;', '6ebfb8d761cf6d7ffc6941603f524f99', '2021-08-29 21:46:19', '2022-06-08 20:07:31', 'nacos', '192.168.0.200', '', 'danyuan', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (212, 'danyuan-hikari.yml', 'DEFAULT_GROUP', 'spring:\r\n  datasource:\r\n    hikari:\r\n      minimum-idle: 5\r\n      maximum-pool-size: 10\r\n      auto-commit: true\r\n      idle-timeout: 600000\r\n      pool-name: DatebookHikariCP\r\n      max-lifetime: 1800000\r\n      connection-timeout: 18000000\r\n      connection-test-query: SELECT 1', 'a54cb88d1897eb19addf063f8ae1db8c', '2021-08-29 21:46:41', '2021-08-29 21:46:41', NULL, '192.168.0.200', '', 'danyuan', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (236, 'danyuan-mysql.yml', 'DEFAULT_GROUP', 'spring:\n  datasource: \n    platform: MYSQL\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: Root@123\n    url: jdbc:mysql://192.168.0.103:3306/application?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC&zeroDateTimeBehavior=convertToNull&autoReconnect=true&failOverReadOnly=false\n', 'c003dc064c7b65becc16942add58d15f', '2021-09-09 04:41:21', '2022-06-08 21:26:29', 'nacos', '192.168.0.200', '', 'danyuan', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (337, 'danyuan-mybatis.yml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    platform: H2\n    driver-class-name: org.h2.Driver\n    #url = jdbc:h2:mem:dbc2m\n    #url: jdbc:h2:file:./dbh2/dbc2m;AUTO_SERVER=TRUE\n    url: jdbc:h2:tcp://localhost:9091,localhost:9092/data\n    username: sa\n    password: \n    initialization-mode: ALWAYS\n    sql-script-encoding: utf-8\n    separator: ;\n', '3b8d3a0032807788517450225bf22df2', '2021-10-28 02:28:55', '2021-10-28 02:36:01', 'nacos', '192.168.0.200', '', 'danyuan', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (374, 'application-datasource-application.yml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    # 当前数据源操作类型\n    type: com.alibaba.druid.pool.DruidDataSource\n    # mysql驱动类\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.0.103:3306/application?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\n    username: root\n    password: Root@123\n    druid:\n      max-active: 30\n      initial-size: 10\n      validation-query: \"SELECT 1\"\n      test-on-borrow: true\n      \nmybatis:\n  mapper-locations: classpath*:mapper/*.xml\n#  mapper-locations: classpath*:mapper/*.xml\n#  type-aliases-package: com.zc.entity;com.zc.zcEntities\n  configuration:\n    # Mybatis实体类属性与数据库表列名对应规则：驼峰转换\n    mapUnderscoreToCamelCase: true\n    callSettersOnNulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\nmybatis-plus:\n  mapper-locations: classpath*:mapper/*.xml ', '06f9285e56f5ea53a227271577b22149', '2021-11-19 01:32:32', '2021-11-19 01:32:51', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (376, 'application-history.yml', 'DEFAULT_GROUP', 'user:\n  # 总开关\n  start: false\n  # 每次取任务数量\n  page-size: 400\n  # 从哪里开始取\n  start-num: 0\n  # 变更名称任务开关\n  start-name: false\n  # 变更注册号码开关\n  start-regno: false\n  # 删除任务数据开关 减少剩余任务数量\n  # delete from application.base_change_company_id_list where delete_flag=1;\n  start-del: true\n  regnoFilter: \n    - \"注册号\"\n    - \"变更前\"\n    - \"变更后\"\n    - \"牌照\"\n    - \"号码\"\n  nameFilter:\n    - \"变更前\"\n    - \"变更后\"\n    - \"名称\"\n    - \"企业\"\n\n  complete: false\n  completeRegno: false\n  completeName: false\n  start-score: false\n\n  # 缓存表的schema\n  prec-schema: \'`backups`.\'\n  # 专利同步到solr开关\n  start-patent: false\n  # 经常异常同步到solr开关\n  #start-business-abnormal: false\n  # 重大违法同步到solr开关\n  #start-violation: false\n  # 行政处罚（案件数）\n  start-case: false\n  # 案件默认标记\n  case-default-flag: 1\n  # 案件完成标记\n  case-complete-flag: 0\n  # 对外贸易\n  start-trade: false\n  # 邮箱\n  start-email: false\n  # 网址\n  start-web: false\n  # 基本\n  start-base: true\n  # 比对companyid\n  start-solr: false\n  # 比对companyid\n  start-change: true\n\n', '6a85fd0341baa94068f23f21838f40ca', '2021-11-19 01:39:51', '2022-08-10 03:54:29', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (426, 'application-history-solr.yml', 'DEFAULT_GROUP', 'user:\n  core: zc_company\n  schema: \'`backups`.\'\n  base:\n    base-company: \"`data`.`base_company_8_3`\"\n    prec-assets-patent: \"`backups`.`prec_assets_patent`\"\n    prec-business-abnormal: \"`backups`.`prec_business_abnormal`\"\n    prec-violation: \"`backups`.`prec_violation`\"\n    prec-trade: \"`backups`.`prec_trade`\"\n    prec-bcis: \"`data`.`prec_bcis`\"\n    prec-company-type: \"`zc_manager`.`prec_company_type`\"\n  column-filter:\n    - \"_version_\"\n    - \"company_name_ik\"\n    - \"company_id\"\n    - \"company_name\"\n    - \"law_person\"\n    - \"credit_code\"\n    - \"staff_count\"\n    - \"registration_number\"\n    - \"company_type\"\n    - \"company_type_name\"\n    - \"registration_date\"\n    - \"registration_capital\"\n    - \"approval_date\"\n    - \"business_status\"\n    - \"registration_address\"\n    - \"company_email\"\n    - \"company_phone\"\n    - \"searcher\"', 'f51c56ef33124dbcfc455a9f6e13f7ff', '2021-11-22 01:51:00', '2022-03-08 20:13:42', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (436, 'application-excutor.yml', 'DEFAULT_GROUP', 'excutor:\n  core-pool-size: 200\n  max-pool-size: 200\n  queue-capacity: 1000', '0f4ce56eb4aaad7a2b7205b29406ec68', '2021-11-24 04:07:33', '2021-12-30 00:37:32', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (460, 'application-cloud-math-server.yml', 'DEFAULT_GROUP', 'user:\n    lambda: 1', '54f92727792d67a89ed6e7cf12ba5562', '2021-12-12 23:22:36', '2021-12-12 23:24:20', 'nacos', '192.168.0.127', '', '', 'application-cloud-math-server', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (487, 'application-sentinel.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    sentinel:\n      filter:\n        url-patterns: /**\n      transport:\n        dashboard: 192.168.0.103:8858\n      log:\n        dir: \'log\'   \n      eager: true\n', '47b1b17155c3e0eda034210aaf9997db', '2021-12-20 03:52:22', '2021-12-21 03:43:19', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (506, 'application-redistask.yml', 'DEFAULT_GROUP', 'user:\n  # 总开关\n  start: true\n  # 每次取任务数量\n  page-size: 1000\n  # 从哪里开始取\n  start-num: 0\n  # redis hashset key  name\n  hash-name: \"FINANCE.listhash::\"', '492ab11cd157867afed9121ce494c810', '2021-12-29 23:15:20', '2021-12-30 00:25:58', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (518, 'application-task-excutor.yml', 'DEFAULT_GROUP', 'spring:  \n  task:\n    execution:\n      thread-name-prefix: asyncServiceExecutor-\n      pool:\n        core-size: 1000\n        max-size: 5000\n        queue-capacity: 10000\n    scheduling:\n      pool:\n        size: 10', '03a2153ab2cc29e0997a76e00801dd97', '2022-01-07 00:03:55', '2022-01-07 00:12:02', 'nacos', '192.168.0.200', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (530, 'application-nosql-query', 'DEFAULT_GROUP', 'user:\n  company-core: zc_company\n  mongo-company-uid: _id', '6bf3455f1e3f84f8b7263a7f589010b8', '2022-02-21 20:50:04', '2022-02-21 20:50:48', 'nacos', '192.168.0.127', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (553, 'application-datasource_zensyo.yml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    # 当前数据源操作类型\n    type: com.alibaba.druid.pool.DruidDataSource\n    # mysql驱动类\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    url: jdbc:mysql://192.168.0.103:3306/data?useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=GMT%2B8&allowPublicKeyRetrieval=true\n    username: root\n    password: Root@123\n    druid:\n      max-active: 30\n      initial-size: 10\n      validation-query: \"SELECT 1\"\n      test-on-borrow: true\n      \nmybatis:\n  mapper-locations: classpath*:mapper/*.xml\n#  mapper-locations: classpath*:mapper/*.xml\n#  type-aliases-package: com.zc.entity;com.zc.zcEntities\n  configuration:\n    # Mybatis实体类属性与数据库表列名对应规则：驼峰转换\n    mapUnderscoreToCamelCase: true\n    callSettersOnNulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    # log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\nmybatis-plus:\n  mapper-locations: classpath*:mapper/*.xml ', 'be77279b7f0ab9e3e19932af9b803479', '2022-03-04 03:30:26', '2022-03-04 03:30:26', NULL, '192.168.0.127', '', '', '', NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (575, 'danyuan-redis.yml', 'DEFAULT_GROUP', 'spring:\r\n  redis:\r\n    host: 192.168.0.103\r\n    port: 6379\r\n    password: \r\n    database: 0\r\n    timeout: 1000\r\n    lettuce:\r\n      pool:\r\n        min-idle: 0\r\n        max-idle: 5\r\n        max-active: 100\r\n        max-wait: 3000\r\n      shutdown-timeout: 100\r\n  cache:\r\n    type: redis\r\n\r\nuser:\r\n  redis:\r\n    ttl:\r\n      user: 5\r\n', 'fdb408290b2e9c44de555e3d7f4d0524', '2022-06-08 05:01:39', '2022-06-08 05:01:39', NULL, '192.168.0.200', '', 'danyuan', NULL, NULL, NULL, 'yaml', NULL);
INSERT INTO `config_info` VALUES (579, 'chuxue-gateway.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:\n    gateway:\n      httpclient:\n        pool:\n          maxIdleTime: 10000 #（根据需要调整）\n      discovery:\n        locator:\n          # 开启从注册中心动态创建路由的功能，利用微服务名称进行路由\n          enabled: true\n          lower-case-service-id: true\n\n      routes:\n        - id: chuxue-serve\n          uri: lb://chuxue-serve\n          predicates:\n            - Path=/serve/**\n        - id: chuxue-data-h2\n          uri: lb://chuxue-data-h2\n          predicates:\n            - Path=/data/**\n            ', '4432e7a099269a0a1246a4e09e39f3ad', '2022-06-08 21:30:21', '2022-06-09 02:04:17', 'nacos', '192.168.0.200', '', 'chuxue', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (580, 'chuxue-nacos.yml', 'DEFAULT_GROUP', 'spring:\n  cloud:  \n    nacos:  \n      # nacos的信息\n      server-addr: 192.168.0.103:8848\n      discovery:  # 容器化后nacos不能找到，需要配置宿主机的ip 和服务的端口，\n        namespace: chuxue\n         # 宿主机的ip\n        ip: ${LOCAL_IP}\n        port: ${server.port}  \n    #inetutils:\n    #  preferred-networks: 10.0.3\n\nribbon:  \n  ReadTimeout: 900000\n  ConnectTimeout: 900000\n   #对当前实例的重试次数\n  MaxAutoRetries: 0\n   #切换实例的重试次数 1\n  MaxAutoRetriesNextServer: 1\nfeign:\n  hystrix:\n    enabled: false\n  client:\n    config:\n      default:\n        connectTimeout: 300000\n        readTimeout: 300000\n    \nhystrix:\n  command:\n    default:\n      execution:\n        isolation:\n          thread:\n            #熔断超时时间\n            timeoutInMilliseconds: 1000000\n\n', '78908d94a7c82a54e069a0a58f4a9368', '2022-06-08 21:30:21', '2022-07-24 20:45:44', 'nacos', '192.168.0.200', '', 'chuxue', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (581, 'chuxue-h2.yml', 'DEFAULT_GROUP', 'spring:\n  jpa:\n    open-in-view: true\n    database: H2\n    database-platform: org.hibernate.dialect.H2Dialect\n    show-sql: true\n    hibernate:\n      ddl-auto: update\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.H2Dialect\n  datasource:\n    platform: H2\n    driver-class-name: org.h2.Driver\n    #url = jdbc:h2:mem:dbc2m\n    #url: jdbc:h2:file:./dbh2/dbc2m;AUTO_SERVER=TRUE\n    url: jdbc:h2:tcp://192.168.0.103:9092/chuxue;MODE=MySQL;DATABASE_TO_LOWER=TRUE\n    username: sa\n    password: \n    initialization-mode: ALWAYS\n    sql-script-encoding: utf-8\n    separator: ;', '7ad80de90cbd729aac199f171ff17854', '2022-06-08 21:30:21', '2022-08-24 04:23:36', 'nacos', '192.168.0.200', '', 'chuxue', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (582, 'chuxue-hikari.yml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    hikari:\n      minimum-idle: 5\n      maximum-pool-size: 10\n      auto-commit: true\n      idle-timeout: 600000\n      pool-name: DatebookHikariCP\n      max-lifetime: 1800000\n      connection-timeout: 18000000\n      connection-test-query: SELECT 1 FROM DUAL', '4faf4c4b398bc2adfa6a15767ccc017b', '2022-06-08 21:30:21', '2022-06-27 01:35:30', 'nacos', '192.168.0.200', '', 'chuxue', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (583, 'chuxue-mysql.yml', 'DEFAULT_GROUP', 'spring:\n  jpa:\n    open-in-view: true\n    database: MYSQL\n    show-sql: true\n    hibernate:\n      ddl-auto: update\n    properties:\n      hibernate:\n        dialect: org.hibernate.dialect.MySQL5InnoDBDialect\n  datasource: \n    platform: MYSQL\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: Root@123\n    url: jdbc:mysql://192.168.0.103:3306/chuxue?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC&zeroDateTimeBehavior=convertToNull&autoReconnect=true&failOverReadOnly=false\n', '77d480b8ae271acfe61e61e1e1766ccc', '2022-06-08 21:30:21', '2022-06-15 21:41:29', 'nacos', '192.168.0.200', '', 'chuxue', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (584, 'chuxue-mybatis.yml', 'DEFAULT_GROUP', 'mybatis:\n  mapper-locations: classpath*:mapper/*.xml\n#  mapper-locations: classpath*:mapper/*.xml\n#  type-aliases-package: com.zc.entity;com.zc.zcEntities\n  configuration:\n    # Mybatis实体类属性与数据库表列名对应规则：驼峰转换\n    mapUnderscoreToCamelCase: true\n    callSettersOnNulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl\nmybatis-plus:\n  mapper-locations: classpath*:mapper/*.xml \n  configuration:\n    # Mybatis实体类属性与数据库表列名对应规则：驼峰转换\n    mapUnderscoreToCamelCase: true\n    callSettersOnNulls: true\n    # 这个配置会将执行的sql打印出来，在开发或测试的时候可以用\n    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl', '8b6e56fab563883f800c5d9ae3a27174', '2022-06-08 21:30:21', '2022-06-21 01:07:42', 'nacos', '192.168.0.200', '', 'chuxue', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (585, 'chuxue-redis.yml', 'DEFAULT_GROUP', 'spring:\n  redis:\n    host: 192.168.0.103\n    port: 6388\n    password: \"514840279@qq.com\"\n    database: 0\n    timeout: 1000\n    lettuce:\n      pool:\n        min-idle: 0\n        max-idle: 5\n        max-active: 100\n        max-wait: 3000\n      shutdown-timeout: 100\n  cache:\n    type: redis\n\nuser:\n  redis:\n    ttl:\n      user: 5\n      test: 50\n', '3a14353fe8a6d4b53f284015aa0b9297', '2022-06-08 21:30:21', '2022-06-20 22:28:39', 'nacos', '192.168.0.200', '', 'chuxue', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (602, 'application-sidecar.yml', 'DEFAULT_GROUP', 'user:\n  uri: \"http://192.168.0.228:3000/crawler\"', '9143b24234c0d8ee67c15ec30d313ac7', '2022-06-20 03:06:33', '2022-06-20 03:21:17', 'nacos', '192.168.0.228', '', '', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (607, 'chuxue-data-h2.yml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    platform: H2\n    driver-class-name: org.h2.Driver\n    #url = jdbc:h2:mem:dbc2m\n    #url: jdbc:h2:file:./dbh2/dbc2m;AUTO_SERVER=TRUE\n    url: jdbc:h2:tcp://192.168.0.103:9092/chuxue;MODE=MySQL;DATABASE_TO_LOWER=TRUE\n    username: sa\n    password: \n    initialization-mode: ALWAYS\n    sql-script-encoding: utf-8\n    separator: ;\n\n    ', '3a99793c2732780886a95386cdc1dfad', '2022-06-21 01:08:21', '2022-08-09 20:08:05', 'nacos', '192.168.0.200', '', 'chuxue', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (613, 'chuxue-data-mysql.yml', 'DEFAULT_GROUP', 'spring:\n  datasource: \n    platform: MYSQL\n    driver-class-name: com.mysql.cj.jdbc.Driver\n    username: root\n    password: Root@123\n    url: jdbc:mysql://192.168.0.103:3306/chuxue?allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=UTF-8&useSSL=false&serverTimezone=UTC&zeroDateTimeBehavior=convertToNull&autoReconnect=true&failOverReadOnly=false\n', '9b31eee045f6360407052ffdef831196', '2022-06-23 00:07:45', '2022-06-24 01:27:13', 'nacos', '192.168.0.200', '', 'chuxue', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (615, 'chuxue-data-oracle.yml', 'DEFAULT_GROUP', 'spring:\n  datasource:\n    driver-class-name: oracle.jdbc.OracleDriver\n    username: system\n    password: oracle\n    url: jdbc:oracle:thin:@192.168.0.105:49161:xe\n', '63a701ae70778cb13fd101e8e2ee35dd', '2022-06-27 00:15:56', '2022-06-27 01:33:52', 'nacos', '192.168.0.200', '', 'chuxue', '', '', '', 'yaml', '');
INSERT INTO `config_info` VALUES (627, 'chuxue-security.yml', 'DEFAULT_GROUP', 'spring:\n  security:\n    user:\n      name: zhangsan\n      password: 123456', 'f04496a3fd35a21ea03f4867edbba244', '2022-08-12 00:35:57', '2022-08-12 00:35:57', NULL, '192.168.0.200', '', 'chuxue', '', NULL, NULL, 'yaml', NULL);

-- ----------------------------
-- Table structure for config_info_aggr
-- ----------------------------
DROP TABLE IF EXISTS `config_info_aggr`;
CREATE TABLE `config_info_aggr`  (
  `id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `datum_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'datum_id',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT '内容',
  `gmt_modified` datetime(0) NOT NULL COMMENT '修改时间',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfoaggr_datagrouptenantdatum`(`data_id`, `group_id`, `tenant_id`, `datum_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '增加租户字段' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_aggr
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_beta
-- ----------------------------
DROP TABLE IF EXISTS `config_info_beta`;
CREATE TABLE `config_info_beta`  (
  `id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `beta_ips` varchar(1024) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'betaIps',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfobeta_datagrouptenant`(`data_id`, `group_id`, `tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_beta' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_beta
-- ----------------------------

-- ----------------------------
-- Table structure for config_info_tag
-- ----------------------------
DROP TABLE IF EXISTS `config_info_tag`;
CREATE TABLE `config_info_tag`  (
  `id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tag_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_id',
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'content',
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'md5',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL COMMENT 'source user',
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'source ip',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_configinfotag_datagrouptenanttag`(`data_id`, `group_id`, `tenant_id`, `tag_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_info_tag' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_info_tag
-- ----------------------------

-- ----------------------------
-- Table structure for config_tags_relation
-- ----------------------------
DROP TABLE IF EXISTS `config_tags_relation`;
CREATE TABLE `config_tags_relation`  (
  `id` bigint(0) NOT NULL COMMENT 'id',
  `tag_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'tag_name',
  `tag_type` varchar(64) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tag_type',
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'data_id',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'group_id',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `nid` bigint(0) NOT NULL AUTO_INCREMENT,
  PRIMARY KEY (`nid`) USING BTREE,
  UNIQUE INDEX `uk_configtagrelation_configidtag`(`id`, `tag_name`, `tag_type`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'config_tag_relation' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of config_tags_relation
-- ----------------------------

-- ----------------------------
-- Table structure for group_capacity
-- ----------------------------
DROP TABLE IF EXISTS `group_capacity`;
CREATE TABLE `group_capacity`  (
  `id` bigint(0) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Group ID，空字符表示整个集群',
  `quota` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数，，0表示使用默认值',
  `max_aggr_size` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_group_id`(`group_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '集群、各Group容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of group_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for his_config_info
-- ----------------------------
DROP TABLE IF EXISTS `his_config_info`;
CREATE TABLE `his_config_info`  (
  `id` bigint(0) UNSIGNED NOT NULL,
  `nid` bigint(0) UNSIGNED NOT NULL AUTO_INCREMENT,
  `data_id` varchar(255) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `group_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `app_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'app_name',
  `content` longtext CHARACTER SET utf8 COLLATE utf8_bin NOT NULL,
  `md5` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00',
  `src_user` text CHARACTER SET utf8 COLLATE utf8_bin NULL,
  `src_ip` varchar(20) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `op_type` char(10) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL,
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT '租户字段',
  PRIMARY KEY (`nid`) USING BTREE,
  INDEX `idx_gmt_create`(`gmt_create`) USING BTREE,
  INDEX `idx_gmt_modified`(`gmt_modified`) USING BTREE,
  INDEX `idx_did`(`data_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 740 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '多租户改造' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of his_config_info
-- ----------------------------
INSERT INTO `his_config_info` VALUES (123, 735, 'application-mongodb.yml', 'DEFAULT_GROUP', '', 'spring:\n  data:\n    mongodb:\n      host: 192.168.0.105\n      port: 27020\n      database: zc_infos\n      username: cluster\n      password: cluster', '66bdcbbad0944501740c127dda984e92', '2010-05-05 00:00:00', '2022-09-01 04:33:14', 'nacos', '192.168.0.200', 'U', '');
INSERT INTO `his_config_info` VALUES (128, 736, 'application-zensyori-writer-finance.yml', 'DEFAULT_GROUP', '', 'common:\n  similar-threshold: 0.60\nman:\n  auto-init: true\nuser:\n  # 检行任务\n  complete-check-task: false\n  test: false #测试模式\n  full-load: true #全量加载\n  last-year-load: true #在年份池没变的情况下，重新更新最末一年的营业值。\n  compute-years: 14 #计算年限\n  vol-suffix-length: 4 #分卷后缀长度\n  page-size: 400 #每次处理的企业数 建议：100\n  #  finance-kafka-topic: finance #预处理企业经营数据的kafka的topic\n  # 增量任务可执行周期（单位：min）\n  delta-finance-deal-during: 6\n# 增量处理的持久化方式\n  delta-company-method: mongo\n  # delta-company-method: hbase\n  mongo-company-uid: _id\n  # mongo-company-uid: uuid\n  base-db: data\n  company-table-name: base_company\n  # company-table-name: base_company_8_3\n  company-core: zc_company\n  history-core: zc_history\n  #  主动判断是否由company_id同步预处理\n  annual-by-company-id : true\n  match-cols-with-abnormal:\n    - credit_code\n    - registration_number\n  match-cols-with-trade:\n    - credit_code\n    - registration_number\n  match-cols-with-bcis:\n    - company_id\n    - registration_number\n  pseudo-rds-sync-method: mongo\n  # pseudo-rds-sync-method: hbase\n  zensyori-log-file-path: /home/log/zensyori/logFile.xlsx\n  \npatch:\n  simulation-to-finance-conf:\n    table-name: patch_simulation_to_finance', '93d0f99c54988bdde7a6466cf60e0513', '2010-05-05 00:00:00', '2022-09-01 05:09:19', 'nacos', '192.168.0.200', 'U', '');
INSERT INTO `his_config_info` VALUES (126, 737, 'application-zensyori-writer.yml', 'DEFAULT_GROUP', '', 'user:\n  init-matter-set:\n    # - finance\n    # - pseudo-rds-sync\n    # - pseudo-rds-rmv\n    # - patch-industry-category-to-finance\n    # - patch-scope-to-finance-quick\n    # - patch-scope-to-finance\n    - delta-finance\n    # - history-company-name\n    #- history-regno\n    # - patch-simulation-to-finance\n    - ff\n    \n  sync-log:\n    ftp-port: 221\n    ftp-host: 192.168.0.103\n    ftp-username: ftpUsr\n    ftp-password: 123456\n    ftp-file-path: /home/redis-data/node1/\n    # ftp-file-path: /home/ftpUsr\n    ftp-file-name: finance_listhash_keys.log\n\n  full-load: true\n  \n  #全量加载\n  last-year-load: true\n  #在年份池没变的情况下，重新更新最末一年的营业值。\n  compute-years: 14\n  #计算年限\n  vol-suffix-length: 4\n  #分卷后缀长度\n  page-size: 100\n  #每次处理的企业数 建议：100\n  company-table-name: base_company\n  # company-table-name: base_company_8_3\n  # company-table-name: base_company\n  # 增量表\n  finance-delta-table-name: backups.zensyori_delta\n  #finance-delta-table-name: zensyori_delta_copy1\n  enable-delta: true\n  \n  # 分发任务时清空cursor\n  finance-delta-clear-cursor: true\n  # 循环发任务，直到无任务可发\n  finance-delta-loop-task: true\n\n  \n  company-table-name-id: id\n  base-db: data\n  #finance-start-page-index: 45859139\n  finance-page-size: 400\n  # 经营分析等三个预处理前清空页标识Md5\n  clear-finance-compute-ids-md5-keys-before-zensyori: true\n  clear_history_company_name_compute_ids_md5_keys_before_zensyori: true\n  clearHistoryRegnoComputeIdsMd5KeysBeforeZensyori: true\n  # 历史名变更表\n  history-company-name-zensyo-table: base_change_by_name\n  # 历史变更每次处理的企业数 建议：100\n  history-page-size: 400\n  company-core: zc_company\n  hbase-using: true\n  \n# 补丁\npatch:\n  simulation-to-finance-conf:\n    table-name: patch_simulation_to_finance\n  email-to-finance-conf:\n    table-name: patch_simulation_to_finance\n  industry-category-to-finance-conf:\n    table-name: patch_industry_category_to_finance_remained\n  quick-scope-conf:\n    - label: G59\n      industry-code-path: 0_$G/1_$54*\n      vend-inc:\n        large: 80000\n        small: 6000\n      ass-gro:\n        large: 80000\n        small: 5000\n  \nman:\n  auto-init: true\n  finance-init: true # 初始化企业数据\n  district-init: false # 初始化地区数据\n  history-init: true # 初始化企业历史变更数据  \n\ncommon:\n  similar-threshold: 0.60  \n\nconfs:\n  scope-by-staffCount: true #按照人员匹配企业规模\n#  scope-by-staffCount: false\ntest: false\n\nmanagement:\n  health:\n    redis:\n      enabled: true  ', '2c0789f0bf1b7750e54536f27ba24714', '2010-05-05 00:00:00', '2022-09-01 05:11:41', 'nacos', '192.168.0.200', 'U', '');
INSERT INTO `his_config_info` VALUES (123, 738, 'application-mongodb.yml', 'DEFAULT_GROUP', '', 'spring:\n  data:\n    mongodb:\n      host: 192.168.0.105\n      port: 27020\n      database: zc_infos\n      username: admin\n      password: admin', 'f85187ec218344ec20300410447168a9', '2010-05-05 00:00:00', '2022-09-01 05:15:05', 'nacos', '192.168.0.200', 'U', '');
INSERT INTO `his_config_info` VALUES (128, 739, 'application-zensyori-writer-finance.yml', 'DEFAULT_GROUP', '', 'common:\n  similar-threshold: 0.60\nman:\n  auto-init: true\nuser:\n  # 检行任务\n  complete-check-task: false\n  test: false #测试模式\n  full-load: true #全量加载\n  last-year-load: true #在年份池没变的情况下，重新更新最末一年的营业值。\n  compute-years: 14 #计算年限\n  vol-suffix-length: 4 #分卷后缀长度\n  page-size: 400 #每次处理的企业数 建议：100\n  #  finance-kafka-topic: finance #预处理企业经营数据的kafka的topic\n  # 增量任务可执行周期（单位：min）\n  delta-finance-deal-during: 6\n# 增量处理的持久化方式\n  delta-company-method: mongo\n  # delta-company-method: hbase\n  mongo-company-uid: _id\n  # mongo-company-uid: uuid\n  base-db: data\n  company-table-name: base_company_8_3\n  # company-table-name: base_company_8_3\n  company-core: zc_company\n  history-core: zc_history\n  #  主动判断是否由company_id同步预处理\n  annual-by-company-id : true\n  match-cols-with-abnormal:\n    - credit_code\n    - registration_number\n  match-cols-with-trade:\n    - credit_code\n    - registration_number\n  match-cols-with-bcis:\n    - company_id\n    - registration_number\n  pseudo-rds-sync-method: mongo\n  # pseudo-rds-sync-method: hbase\n  zensyori-log-file-path: /home/log/zensyori/logFile.xlsx\n  \npatch:\n  simulation-to-finance-conf:\n    table-name: patch_simulation_to_finance', 'e0c9d1417a7c29f2172466e85f045144', '2010-05-05 00:00:00', '2022-09-23 05:19:25', 'nacos', '192.168.0.200', 'U', '');

-- ----------------------------
-- Table structure for permissions
-- ----------------------------
DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions`  (
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `resource` varchar(512) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `action` varchar(8) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `uk_role_permission`(`role`, `resource`, `action`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of permissions
-- ----------------------------

-- ----------------------------
-- Table structure for roles
-- ----------------------------
DROP TABLE IF EXISTS `roles`;
CREATE TABLE `roles`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `role` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  UNIQUE INDEX `uk_username_role`(`username`, `role`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of roles
-- ----------------------------
INSERT INTO `roles` VALUES ('nacos', 'ROLE_ADMIN');

-- ----------------------------
-- Table structure for tenant_capacity
-- ----------------------------
DROP TABLE IF EXISTS `tenant_capacity`;
CREATE TABLE `tenant_capacity`  (
  `id` bigint(0) UNSIGNED NOT NULL AUTO_INCREMENT COMMENT '主键ID',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL DEFAULT '' COMMENT 'Tenant ID',
  `quota` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '配额，0表示使用默认值',
  `usage` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '使用量',
  `max_size` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个配置大小上限，单位为字节，0表示使用默认值',
  `max_aggr_count` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '聚合子配置最大个数',
  `max_aggr_size` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '单个聚合数据的子配置大小上限，单位为字节，0表示使用默认值',
  `max_history_count` int(0) UNSIGNED NOT NULL DEFAULT 0 COMMENT '最大变更历史数量',
  `gmt_create` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '创建时间',
  `gmt_modified` datetime(0) NOT NULL DEFAULT '2010-05-05 00:00:00' COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 1 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = '租户容量信息表' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_capacity
-- ----------------------------

-- ----------------------------
-- Table structure for tenant_info
-- ----------------------------
DROP TABLE IF EXISTS `tenant_info`;
CREATE TABLE `tenant_info`  (
  `id` bigint(0) NOT NULL AUTO_INCREMENT COMMENT 'id',
  `kp` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NOT NULL COMMENT 'kp',
  `tenant_id` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_id',
  `tenant_name` varchar(128) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT '' COMMENT 'tenant_name',
  `tenant_desc` varchar(256) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'tenant_desc',
  `create_source` varchar(32) CHARACTER SET utf8 COLLATE utf8_bin NULL DEFAULT NULL COMMENT 'create_source',
  `gmt_create` bigint(0) NOT NULL COMMENT '创建时间',
  `gmt_modified` bigint(0) NOT NULL COMMENT '修改时间',
  PRIMARY KEY (`id`) USING BTREE,
  UNIQUE INDEX `uk_tenant_info_kptenantid`(`kp`, `tenant_id`) USING BTREE,
  INDEX `idx_tenant_id`(`tenant_id`) USING BTREE
) ENGINE = InnoDB AUTO_INCREMENT = 9 CHARACTER SET = utf8 COLLATE = utf8_bin COMMENT = 'tenant_info' ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of tenant_info
-- ----------------------------
INSERT INTO `tenant_info` VALUES (1, '1', '8152c4e7-74b5-4946-a2fe-d1add8724c4c', 'dev', '测试', 'nacos', 1614931025251, 1614931025251);
INSERT INTO `tenant_info` VALUES (6, '1', 'b7c33814-71d9-41ce-a706-bf8bcba16316', 'pro', '生产环境', 'nacos', 1626775317741, 1626775317741);
INSERT INTO `tenant_info` VALUES (8, '1', 'chuxue', 'chuxue', 'chuxue', 'nacos', 1654741759353, 1654741759353);

-- ----------------------------
-- Table structure for users
-- ----------------------------
DROP TABLE IF EXISTS `users`;
CREATE TABLE `users`  (
  `username` varchar(50) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `PASSWORD` varchar(500) CHARACTER SET utf8mb4 COLLATE utf8mb4_general_ci NOT NULL,
  `enabled` tinyint(1) NOT NULL,
  PRIMARY KEY (`username`) USING BTREE
) ENGINE = InnoDB CHARACTER SET = utf8mb4 COLLATE = utf8mb4_general_ci ROW_FORMAT = Dynamic;

-- ----------------------------
-- Records of users
-- ----------------------------
INSERT INTO `users` VALUES ('nacos', '$2a$10$EuWPZHzz32dJN7jexM34MOeYirDdFAZm2kuWj7VEOJhhZkDrxfvUu', 1);

SET FOREIGN_KEY_CHECKS = 1;
